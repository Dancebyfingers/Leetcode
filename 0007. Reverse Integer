"""Given a signed 32-bit integer x, return x with its digits reversed. 
If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0.
Assume the environment does not allow you to store 64-bit integers (signed or unsigned).

Example 1:
Input: x = 123
Output: 321

Example 2:
Input: x = -123
Output: -321

Example 3:
Input: x = 120
Output: 21"""


class Solution:
    def reverse(self, x: int) -> int:
        # 比较与0大小, Python3, T-F=1, F-T=-1
        sign = (x > 0) - (x < 0) 
        # x必须先乘以sign再str，再颠倒，否则可能出现‘321-’，int时会出错
        reverse = int(str(x*sign)[::-1])
        return sign*reverse * (reverse < 2**31)

# Easy understand
class Solution:
    def reverse(self, x: int) -> int:

        sign = 1
        if x < 0:
            sign = -1
            x *= -1

        x = int(str(x)[::-1])
        if x > 2**31-1 or x < 2**31 * -1:
            return 0
        return sign * x
