'''Write a function to find the longest common prefix string amongst an array of strings.
If there is no common prefix, return an empty string "". 
Example 1:
Input: strs = ["flower","flow","flight"]
Output: "fl"

Example 2:
Input: strs = ["dog","racecar","car"]
Output: ""
Explanation: There is no common prefix among the input strings.
 

Constraints:
1 <= strs.length <= 200
0 <= strs[i].length <= 200
strs[i] consists of only lowercase English letters.

scan vertically:
 i     0  1  2  3  4  5
 0     f  l  o  w  e  r
 1	    f  l  o  w
 2	    f  l  i  g  h  t
		
We choose the first string in the list as a reference. in this case is str[0] = "flower"
the outside for-loop go through each character of the str[0] or "flower". f->l->o->w->e->r
the inside for-loop, go through the words, in this case is flow, flight.

strs[j][i] means the the i's character of the j words in the strs.

there are 3 cases when we proceed the scan:

case 1: strs[j][i] = c, strs[1][2] = 'o' and strs[0][2] = 'o';  keep going;
case 2: strs[j][i] != c, strs[2][2] = 'i' and strs[0][2] = 'o';  break the rule, we can return strs[j][:i]. when comes to slicing a string, [:i] won't include the index i;
case 3: i = len(strs[j]) which means current word at strs[j] doesn't have character at index i, since it's 0 based index. the lenght equals i, the index ends at i - 1; break the rule, we can return.

 '''
class Solution:
    def longestCommonPrefix(self, strs: List[str]) -> str:
        if strs == None or len(strs) == 0: return ""
        for i in range(len(strs[0])): 
            c = strs[0][i]
            for j in range(1,len(strs)):
                if i == len(strs[j]) or strs[j][i] != c:
                    return strs[0][:i]
        return strs[0] if strs else ""



class Solution:
    def longestCommonPrefix(self, S: List[str]) -> str:
        if not S:
            return ""
        shortest = min(S,key=len) # get the shortest word in lenth
        for i, ch in enumerate(shortest): # iterate letters in shortest word
            for other in S: # iterate the words in list
                if other[i] != ch: 
                    return shortest[:i]
        return shortest 
        
        
        
 """strs = ["flower","flow","flight"]
l = list(zip(*strs))
>>> l = [('f', 'f', 'f'), ('l', 'l', 'l'), ('o', 'o', 'i'), ('w', 'w', 'g')]"""

class Solution:
    def longestCommonPrefix(self, strs: List[str]) -> str:
        l = list(zip(*strs))
        prefix = ""
        for i in l:
            if len(set(i))==1:
                prefix += i[0]
            else:
                break
        return prefix
        
        
        
        
