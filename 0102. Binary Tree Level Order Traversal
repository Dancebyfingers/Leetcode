'''Given the root of a binary tree, return the level order traversal of its nodes' values. 
(i.e., from left to right, level by level).

Input: root = [3,9,20,null,null,15,7]
Output: [[3],[9,20],[15,7]]

Input: root = [1]
Output: [[1]]

Input: root = []
Output: []'''



# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution: # O(n) O(n)
    def levelOrder(self, root: Optional[TreeNode]) -> List[List[int]]:
        res = []
        if not root: return res
        
        def bfs(node, level):
            if len(res) == level: # locate input level in res
                res.append([])
            res[level].append(node.val)
            if node. left: bfs(node.left, level + 1)
            if node. right: bfs(node.right, level + 1)

        bfs(root,0)
        return res
