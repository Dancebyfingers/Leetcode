class Solution: # O(m*n) O(1)
    def spiralOrder(self, matrix: List[List[int]]) -> List[int]:
        res = []
        up = left = 0
        m = len(matrix)
        n = len(matrix[0])
        down = m - 1
        right = n - 1

        while len(res) < m * n :
            # right
            for col in range(left, right + 1):
                res.append(matrix[up][col])
            # down
            for row in range(up + 1, down + 1):
                res.append(matrix[row][right])
            # left
            if up != down:
                for col in range(right - 1, left - 1, -1):
                    res.append(matrix[down][col])
            # up
            if left != right:
                for row in range(down - 1, up, -1):
                    res.append(matrix[row][left])
            up += 1
            left += 1
            down -= 1
            right -= 1
        return res

