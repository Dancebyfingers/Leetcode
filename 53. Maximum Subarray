"""Given an integer array nums, find the contiguous subarray (containing at least one number) which has the largest sum and return its sum.
A subarray is a contiguous part of an array.
Input: nums = [-2,1,-3,4,-1,2,1,-5,4]
Output: 6
Explanation: [4,-1,2,1] has the largest sum = 6.
"""

class Solution:
    def maxSubArray(self, nums: List[int]) -> int:
        cur_sub = max_sub = nums[0]
        for num in nums[1:]:  # [1:]means start 2nd because 1st used 跟string用法一样
            cur_sub = max(num, cur_sub + num) #num是否要加取决于当前num大还是把前面的都加上大，也就是说如果前面的sub变成负数了就都不要了，只取当前数num
            max_sub = max(max_sub, cur_sub)
        return max_sub
        
