def spiral_traverse_and_vowels(grid):
    # TODO: implement
    rows = len(grid)
    cols = len(grid[0])
    result = []
    vowels = ["a", "e", "i", "o", "u"]

    direction = "right"
    top, bottom = 0, rows - 1
    left, right = 0, cols - 1
    
    letters = []

    while top <= bottom and left <= right:
        # Move right across the top row
        for col in range(left, right + 1):
            letters.append(grid[top][col])
        top += 1
        
        # Move down the right column
        for row in range(top, bottom + 1):
            letters.append(grid[row][right])
        right -= 1
        
        # Move left across the bottom row (if there's still a row)
        if top <= bottom:
            for col in range(right, left - 1, -1):
                letters.append(grid[bottom][col])
            bottom -= 1
        
        # Move up the left column (if there's still a column)
        if left <= right:
            for row in range(bottom, top - 1, -1):
                letters.append(grid[row][left])
            left += 1

        # Identify positions of vowels in the spiral sequence
    for i, char in enumerate(letters):
        if char in vowels:
            result.append(i + 1)  # Convert to 1-indexed position
    
                
    return result
