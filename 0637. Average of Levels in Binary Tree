"""Given the root of a binary tree, return the average value of the nodes on each level in the form of an array. 
Answers within 10-5 of the actual answer will be accepted.

Example 1:
Input: root = [3,9,20,null,null,15,7]
Output: [3.00000,14.50000,11.00000]
Explanation: The average value of nodes on level 0 is 3, on level 1 is 14.5, and on level 2 is 11.
Hence return [3, 14.5, 11].

Example 2:
Input: root = [3,9,20,15,7]
Output: [3.00000,14.50000,11.00000]
 
Constraints:
The number of nodes in the tree is in the range [1, 104].
-231 <= Node.val <= 231 - 1"""



import collections
class Solution:
    def averageOfLevels(self, root: Optional[TreeNode]) -> List[float]:
        res = []
        if not root: 
            return res
        
        q = deque([root])       
        while q: 
            curRes = []
            for _ in range(len(q)):
                curr = q.popleft()
                curRes.append(curr.val)
                
                if curr.left: 
                    q.append(curr.left)
                if curr.right: 
                    q.append(curr.right)
            
            res.append(sum(curRes)/len(curRes))
        
        return res
