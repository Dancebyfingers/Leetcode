"""Given an integer array nums, return the length of the longest strictly increasing subsequence.
A subsequence is a sequence that can be derived from an array by deleting some 
or no elements without changing the order of the remaining elements. 
For example, [3,6,2,7] is a subsequence of the array [0,3,1,6,2,2,7].

Example 1:
Input: nums = [10,9,2,5,3,7,101,18]
Output: 4
Explanation: The longest increasing subsequence is [2,3,7,101], therefore the length is 4.

Example 2:
Input: nums = [0,1,0,3,2,3]
Output: 4

Example 3:
Input: nums = [7,7,7,7,7,7,7]
Output: 1
"""


# DP + binary search.  
# Time: O(nlgn) space: O(n)
    def lengthOfLIS(self, nums: List[int]) -> int:
        sub = []
        for num in nums:
            # bisect_left(ls, x, lo=0, hi=len(ls))前提是列表有序，返回大于等于x的第一个idx
            i = bisect_left(sub, num)
            # If num is greater than any element in dp
            if i == len(sub):
                sub.append(num)           
            # Otherwise, replace the first element in dp greater than or equal to num
            else:
                sub[i] = num
        return len(sub)
        
        
# dp  O(n2) 
    def lengthOfLIS(self, nums: List[int]) -> int:
        dp = [1] * len(nums) # dp[i] 表示以 nums[i] 为结尾的最长递增子串的长度
        for i in range(len(nums)): # 对于每一个 nums[i]
            for j in range(i): # 从第一个数再搜索到i
                if nums[i] > nums[j]:  # 如果发现nums[i]大于前面的某个数nums[j]，更新 dp[i] 
                    dp[i] = max(dp[i], dp[j] + 1) # dp[j]是那个小于 nums[i] 的数在dp中的值
                    # +1是因为有一个比nums[i]小的数，dp[i]就应该+1；若没有+1，dp就永远是[1,1,1..]
        return max(dp)  # 最大值即为 LIS 的长度  
        
        
        
# Intuition
class Solution:
    def lengthOfLIS(self, nums: List[int]) -> int:
        sub = [nums[0]]
        
        for num in nums[1:]:
            if num > sub[-1]:
                sub.append(num)
            else:
        # Find 1st element that sub[x] >= num
                i = 0
                while num > sub[i]:
                    i += 1
                sub[i] = num
        return len(sub)
    
