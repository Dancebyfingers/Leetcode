'''Implement pow(x, n), which calculates x raised to the power n (i.e., xn).'''

class Solution:
    def myPow(self, x: float, n: int) -> float:
        def function(base=x, exponent=abs(n)):
            if exponent == 0:
                return 1
            elif exponent % 2 == 0:
                return function(base * base, exponent // 2)
            else:
                return base * function(base * base, (exponent - 1) // 2)

        f = function()
        
        return float(f) if n >= 0 else 1/f


class Solution:
    def myPow(self, x: float, n: int) -> float:
        if n == 0:
            return 1
        if n < 0:
            x = 1 / x
            n = -n
        res = 1
        cur = x
        while n > 0:
            if n % 2 == 1:
                res = res * cur
            cur = cur * cur
            n = n // 2
        return res
